import{_ as e,H as t,o as c,c as r,k as a,a as s,L as l,w as o,V as p}from"./chunks/framework.e370de87.js";const C="/blog_vitepress/assets/image-20230622174438782.2c446b21.png",y="/blog_vitepress/assets/image-20230602205009397.a418aaec.png",i="/blog_vitepress/assets/image-20230602205454129.9aa1d4be.png",D="/blog_vitepress/assets/image-20230602210143705.650e398c.png",A="/blog_vitepress/assets/image-20230602215658508.72a70f7a.png",d="/blog_vitepress/assets/image-20230602221943985.289f922f.png",g="/blog_vitepress/assets/image-20230602221351499.dbe24d4f.png",F="/blog_vitepress/assets/image-20230602222916514.2f841974.png",E="/blog_vitepress/assets/image-20230603210828530.b883e188.png",h="/blog_vitepress/assets/image-20230602224211993.2fb85123.png",m="/blog_vitepress/assets/image-20230603101527047.2f1aa6dc.png",b="/blog_vitepress/assets/image-20230603182407098.b02cb626.png",u="/blog_vitepress/assets/image-20230603182938054.fa46fa16.png",B="/blog_vitepress/assets/image-20230603182813501.9972c171.png",f="/blog_vitepress/assets/image-20230603184721329.812d79cf.png",v="/blog_vitepress/assets/image-20230603215315784.ab69995b.png",_="/blog_vitepress/assets/image-20230603215610459.86438857.png",k="/blog_vitepress/assets/image-20230603215741368.167ee5af.png",q="/blog_vitepress/assets/image-20230603215821251.caf59549.png",$="/blog_vitepress/assets/image-20230603215929363.c9f57673.png",x="/blog_vitepress/assets/image-20230603220446076.c5977e03.png",G="/blog_vitepress/assets/image-20230603224246071.a1daf94a.png",P="/blog_vitepress/assets/image-20230603224649760.e20b441b.png",S="/blog_vitepress/assets/image-20230603232254196.39d8da7f.png",w="/blog_vitepress/assets/image-20230603232719592.e9230fe8.png",Cs=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"column/tool/git/index.md","filePath":"column/tool/git/index.md"}'),T={name:"column/tool/git/index.md"},V=p("",15),N=a("code",null,"提供版本管理功能",-1),R=p("",18),H=a("strong",null,"Git",-1),I=a("strong",null,"SVN",-1),M=a("strong",null,"Git",-1),O=a("strong",null,"SVN",-1),U=a("code",null,"分支管理的支持相对较弱",-1),W=a("strong",null,"Git",-1),L=a("strong",null,"SVN",-1),j=a("code",null,"依赖中央服务器",-1),J=a("li",null,[s("整体设计："),a("strong",null,"Git"),s("的设计理念是快速、简洁，并且易于扩展和定制。而"),a("strong",null,"SVN"),s("是比较早期的版本控制工具，设计理念较为传统，没有像Git那样简洁、高效的特点。")],-1),z=p("",77),K=p("",27),Q=a("code",null,"dev",-1),X=a("code",null,"dev",-1),Y=a("code",null,"master",-1),Z=a("code",null,"master",-1),ss=a("code",null,"dev",-1),as=p("",123);function ns(ls,os,ps,es,ts,cs){const n=t("font");return c(),r("div",null,[V,a("p",null,[s("git是一种"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("源码管理系统")]),_:1}),s("（source code management，缩写为SCM）。它对当前文件"),N,s("，核心思想是对当前文件建立一个对象数据库（object database），将历史版本信息存放在这个数据库中")]),R,a("ol",null,[a("li",null,[s("分布式 vs 集中式："),H,s("是一种分布式版本控制工具，"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("每个开发者都拥有完整的代码副本")]),_:1}),s("，可以在本地独立进行开发、测试和提交，显得更加灵活和高效。而"),I,s("是一种集中式版本控制工具，需要中央服务器作为代码存储和管理的中心，开发者则基于中央服务器进行开发工作。")]),a("li",null,[s("分支管理："),M,s("的分支管理功能非常强大，"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("易于创建和合并分支，支持多个分支同时存在")]),_:1}),s("，可以在不干扰其他分支的情况下进行开发和测试等操作。而"),O,s("对"),U,s("，分支的创建和合并需要复杂的合并操作和代码冲突的解决。")]),a("li",null,[s("性能：由于"),W,s("是一种分布式版本控制工具，"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("每个开发者都拥有本地的代码副本")]),_:1}),s("，所以在本地进行版本控制操作的速度非常快，而"),L,s("需要"),j,s("，因此操作速度较慢。")]),J]),z,a("p",null,[s("Untracked：未跟踪,此文件在文件夹中，,但并没有加入到git库,不参与版本控制.通过"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git add")]),_:1}),s("状态变为"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("staged")]),_:1}),s(" Unmodify：文件已经入库,未修改,即版本库中的文件快照内容与文件夹中完全一致.这种类型的文件有两种去处,如果它被修改,而变为"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("Modified ")]),_:1}),s(".如果使用"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git rm")]),_:1}),s("移出版本库,则成为"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("untracked")]),_:1}),s("文件 Modified：文件已修改,仅仅是修改,并没有进行其他的操作.这个文件也有两个去处,通过"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git add")]),_:1}),s("可进入暂仔"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("staged")]),_:1}),s(" 状态,使用"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git checkout")]),_:1}),s("则丢弃修改过,返回到 "),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("unmodify")]),_:1}),s("状态,这个"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git checkout")]),_:1}),s("即从库中取出文件,覆盖当前修改! Staged：暂存状态. 执行"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git commit")]),_:1}),s("则将修改同步到库中,这时库中的文件和本地文件又变为一致,文件为"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("unmodify")]),_:1}),s("状态.执行"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("git reset HEAD filename")]),_:1}),s("取消暂存,文件状态为"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("Modified")]),_:1})]),K,a("p",null,[s("在"),Q,s("上的工作完成了，就可以把"),X,l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("合并")]),_:1}),s("到"),Y,s("上。Git怎么合并呢？最简单的方法，就是直接把"),Z,s("指向"),ss,s("的当前提交，就完成了"),l(n,{style:{"background-color":"rgb(246, 246, 246)","border-color":"transparent",color:"red"}},{default:o(()=>[s("合并")]),_:1})]),as])}const ys=e(T,[["render",ns]]);export{Cs as __pageData,ys as default};
